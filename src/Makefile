# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/normalize
pkglibdir = $(libdir)/normalize
pkgincludedir = $(includedir)/normalize
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = normalize$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/normalize-mp3.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = normalize-mp3
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__normalize_SOURCES_DIST = normalize.c volume.c adjust.c \
	mpegadjust.c common.h version.c getopt.c getopt1.c getopt.h \
	wiener_af.c wiener_af.h riff.c riff.h mpegvolume.c
am__objects_1 = normalize-wiener_af.$(OBJEXT) \
	normalize-riff.$(OBJEXT)
am__objects_2 = normalize-mpegvolume.$(OBJEXT)
am_normalize_OBJECTS = normalize-normalize.$(OBJEXT) \
	normalize-volume.$(OBJEXT) normalize-adjust.$(OBJEXT) \
	normalize-mpegadjust.$(OBJEXT) normalize-version.$(OBJEXT) \
	normalize-getopt.$(OBJEXT) normalize-getopt1.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
normalize_OBJECTS = $(am_normalize_OBJECTS)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(normalize_SOURCES) $(EXTRA_normalize_SOURCES)
DIST_SOURCES = $(am__normalize_SOURCES_DIST) \
	$(EXTRA_normalize_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run tar
AR = ar
AUDIOFILE_CFLAGS = 
AUDIOFILE_CONFIG = no
AUDIOFILE_FALSE = 
AUDIOFILE_LIBS = 
AUDIOFILE_TRUE = #
AUTOCONF = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
FLACDECODE = flac -s -d -o %w %m
FLACENCODE = flac -s -o %m %w
GLIB_CFLAGS = 
GLIB_CONFIG = no
GLIB_LIBS = 
GMSGFMT = /usr/bin/msgfmt
GTK_CFLAGS = 
GTK_CONFIG = no
GTK_LIBS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MADLIBS = -lmad
MAD_FALSE = #
MAD_TRUE = 
MAKEINFO = ${SHELL} /home/nutria/rafgh/gnunormalizefork/config/missing --run makeinfo
METAFLAC = metaflac
MKINSTALLDIRS = $(top_builddir)/config/mkinstalldirs
MP3DECODE = mpg123 -q -w %w %m
MP3ENCODE = lame --quiet -h -b %b %w %m
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NORMALIZE_BIN = normalize
OBJEXT = o
OGGDECODE = oggdec -Q -o %w %m
OGGENCODE = oggenc -Q -b %b -o %m %w
PACKAGE = normalize
PACKAGE_BUGREPORT = 
PACKAGE_NAME = normalize
PACKAGE_STRING = normalize 0.7.7
PACKAGE_TARNAME = normalize
PACKAGE_VERSION = 0.7.7
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PLUGINS = 
POSUB = po
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 0.7.7
VORBISCOMMENT = vorbiscomment
XGETTEXT = /usr/bin/xgettext
XMMS_CFLAGS = 
XMMS_CONFIG = no
XMMS_DATA_DIR = 
XMMS_EFFECT_PLUGIN_DIR = 
XMMS_GENERAL_PLUGIN_DIR = 
XMMS_INPUT_PLUGIN_DIR = 
XMMS_LIBS = 
XMMS_OUTPUT_PLUGIN_DIR = 
XMMS_PLUGIN_DIR = 
XMMS_VERSION = 
XMMS_VISUALIZATION_PLUGIN_DIR = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/nutria/rafgh/gnunormalizefork/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
bin_SCRIPTS = normalize-mp3
AUDIOFILESOURCES = wiener_af.c wiener_af.h riff.c riff.h
#AUDIOFILESOURCES = 
#MADSOURCES = 
MADSOURCES = mpegvolume.c
normalize_SOURCES = normalize.c volume.c adjust.c mpegadjust.c \
	common.h version.c getopt.c getopt1.c getopt.h \
	$(AUDIOFILESOURCES) $(MADSOURCES)

EXTRA_normalize_SOURCES = wiener_af.c wiener_af.h riff.c riff.h mpegvolume.c
normalize_LDADD = -L$(top_builddir)/nid3lib -lnid3 \
	-lmad  

normalize_DEPENDENCIES = $(top_builddir)/nid3lib/libnid3.a
normalize_CFLAGS =  $(AM_CFLAGS)
localedir = $(datadir)/locale
INCLUDES = -I$(top_srcdir)/nid3lib \
	-I$(top_builddir)/intl -DLOCALEDIR=\"$(localedir)\"

EXTRA_DIST = normalize-mp3.in mktestwav.c
CLEANFILES = mktestwav riffwalk wavread test-wiener-af test-real-af mp3adjust
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
normalize-mp3: $(top_builddir)/config.status $(srcdir)/normalize-mp3.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
normalize$(EXEEXT): $(normalize_OBJECTS) $(normalize_DEPENDENCIES) 
	@rm -f normalize$(EXEEXT)
	$(LINK) $(normalize_LDFLAGS) $(normalize_OBJECTS) $(normalize_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/normalize-adjust.Po
include ./$(DEPDIR)/normalize-getopt.Po
include ./$(DEPDIR)/normalize-getopt1.Po
include ./$(DEPDIR)/normalize-mpegadjust.Po
include ./$(DEPDIR)/normalize-mpegvolume.Po
include ./$(DEPDIR)/normalize-normalize.Po
include ./$(DEPDIR)/normalize-riff.Po
include ./$(DEPDIR)/normalize-version.Po
include ./$(DEPDIR)/normalize-volume.Po
include ./$(DEPDIR)/normalize-wiener_af.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

normalize-normalize.o: normalize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-normalize.o -MD -MP -MF "$(DEPDIR)/normalize-normalize.Tpo" -c -o normalize-normalize.o `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c; \
	then mv -f "$(DEPDIR)/normalize-normalize.Tpo" "$(DEPDIR)/normalize-normalize.Po"; else rm -f "$(DEPDIR)/normalize-normalize.Tpo"; exit 1; fi
#	source='normalize.c' object='normalize-normalize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-normalize.o `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c

normalize-normalize.obj: normalize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-normalize.obj -MD -MP -MF "$(DEPDIR)/normalize-normalize.Tpo" -c -o normalize-normalize.obj `if test -f 'normalize.c'; then $(CYGPATH_W) 'normalize.c'; else $(CYGPATH_W) '$(srcdir)/normalize.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-normalize.Tpo" "$(DEPDIR)/normalize-normalize.Po"; else rm -f "$(DEPDIR)/normalize-normalize.Tpo"; exit 1; fi
#	source='normalize.c' object='normalize-normalize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-normalize.obj `if test -f 'normalize.c'; then $(CYGPATH_W) 'normalize.c'; else $(CYGPATH_W) '$(srcdir)/normalize.c'; fi`

normalize-volume.o: volume.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-volume.o -MD -MP -MF "$(DEPDIR)/normalize-volume.Tpo" -c -o normalize-volume.o `test -f 'volume.c' || echo '$(srcdir)/'`volume.c; \
	then mv -f "$(DEPDIR)/normalize-volume.Tpo" "$(DEPDIR)/normalize-volume.Po"; else rm -f "$(DEPDIR)/normalize-volume.Tpo"; exit 1; fi
#	source='volume.c' object='normalize-volume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-volume.o `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

normalize-volume.obj: volume.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-volume.obj -MD -MP -MF "$(DEPDIR)/normalize-volume.Tpo" -c -o normalize-volume.obj `if test -f 'volume.c'; then $(CYGPATH_W) 'volume.c'; else $(CYGPATH_W) '$(srcdir)/volume.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-volume.Tpo" "$(DEPDIR)/normalize-volume.Po"; else rm -f "$(DEPDIR)/normalize-volume.Tpo"; exit 1; fi
#	source='volume.c' object='normalize-volume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-volume.obj `if test -f 'volume.c'; then $(CYGPATH_W) 'volume.c'; else $(CYGPATH_W) '$(srcdir)/volume.c'; fi`

normalize-adjust.o: adjust.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-adjust.o -MD -MP -MF "$(DEPDIR)/normalize-adjust.Tpo" -c -o normalize-adjust.o `test -f 'adjust.c' || echo '$(srcdir)/'`adjust.c; \
	then mv -f "$(DEPDIR)/normalize-adjust.Tpo" "$(DEPDIR)/normalize-adjust.Po"; else rm -f "$(DEPDIR)/normalize-adjust.Tpo"; exit 1; fi
#	source='adjust.c' object='normalize-adjust.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-adjust.o `test -f 'adjust.c' || echo '$(srcdir)/'`adjust.c

normalize-adjust.obj: adjust.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-adjust.obj -MD -MP -MF "$(DEPDIR)/normalize-adjust.Tpo" -c -o normalize-adjust.obj `if test -f 'adjust.c'; then $(CYGPATH_W) 'adjust.c'; else $(CYGPATH_W) '$(srcdir)/adjust.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-adjust.Tpo" "$(DEPDIR)/normalize-adjust.Po"; else rm -f "$(DEPDIR)/normalize-adjust.Tpo"; exit 1; fi
#	source='adjust.c' object='normalize-adjust.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-adjust.obj `if test -f 'adjust.c'; then $(CYGPATH_W) 'adjust.c'; else $(CYGPATH_W) '$(srcdir)/adjust.c'; fi`

normalize-mpegadjust.o: mpegadjust.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-mpegadjust.o -MD -MP -MF "$(DEPDIR)/normalize-mpegadjust.Tpo" -c -o normalize-mpegadjust.o `test -f 'mpegadjust.c' || echo '$(srcdir)/'`mpegadjust.c; \
	then mv -f "$(DEPDIR)/normalize-mpegadjust.Tpo" "$(DEPDIR)/normalize-mpegadjust.Po"; else rm -f "$(DEPDIR)/normalize-mpegadjust.Tpo"; exit 1; fi
#	source='mpegadjust.c' object='normalize-mpegadjust.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-mpegadjust.o `test -f 'mpegadjust.c' || echo '$(srcdir)/'`mpegadjust.c

normalize-mpegadjust.obj: mpegadjust.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-mpegadjust.obj -MD -MP -MF "$(DEPDIR)/normalize-mpegadjust.Tpo" -c -o normalize-mpegadjust.obj `if test -f 'mpegadjust.c'; then $(CYGPATH_W) 'mpegadjust.c'; else $(CYGPATH_W) '$(srcdir)/mpegadjust.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-mpegadjust.Tpo" "$(DEPDIR)/normalize-mpegadjust.Po"; else rm -f "$(DEPDIR)/normalize-mpegadjust.Tpo"; exit 1; fi
#	source='mpegadjust.c' object='normalize-mpegadjust.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-mpegadjust.obj `if test -f 'mpegadjust.c'; then $(CYGPATH_W) 'mpegadjust.c'; else $(CYGPATH_W) '$(srcdir)/mpegadjust.c'; fi`

normalize-version.o: version.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-version.o -MD -MP -MF "$(DEPDIR)/normalize-version.Tpo" -c -o normalize-version.o `test -f 'version.c' || echo '$(srcdir)/'`version.c; \
	then mv -f "$(DEPDIR)/normalize-version.Tpo" "$(DEPDIR)/normalize-version.Po"; else rm -f "$(DEPDIR)/normalize-version.Tpo"; exit 1; fi
#	source='version.c' object='normalize-version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-version.o `test -f 'version.c' || echo '$(srcdir)/'`version.c

normalize-version.obj: version.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-version.obj -MD -MP -MF "$(DEPDIR)/normalize-version.Tpo" -c -o normalize-version.obj `if test -f 'version.c'; then $(CYGPATH_W) 'version.c'; else $(CYGPATH_W) '$(srcdir)/version.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-version.Tpo" "$(DEPDIR)/normalize-version.Po"; else rm -f "$(DEPDIR)/normalize-version.Tpo"; exit 1; fi
#	source='version.c' object='normalize-version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-version.obj `if test -f 'version.c'; then $(CYGPATH_W) 'version.c'; else $(CYGPATH_W) '$(srcdir)/version.c'; fi`

normalize-getopt.o: getopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-getopt.o -MD -MP -MF "$(DEPDIR)/normalize-getopt.Tpo" -c -o normalize-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c; \
	then mv -f "$(DEPDIR)/normalize-getopt.Tpo" "$(DEPDIR)/normalize-getopt.Po"; else rm -f "$(DEPDIR)/normalize-getopt.Tpo"; exit 1; fi
#	source='getopt.c' object='normalize-getopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c

normalize-getopt.obj: getopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-getopt.obj -MD -MP -MF "$(DEPDIR)/normalize-getopt.Tpo" -c -o normalize-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-getopt.Tpo" "$(DEPDIR)/normalize-getopt.Po"; else rm -f "$(DEPDIR)/normalize-getopt.Tpo"; exit 1; fi
#	source='getopt.c' object='normalize-getopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`

normalize-getopt1.o: getopt1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-getopt1.o -MD -MP -MF "$(DEPDIR)/normalize-getopt1.Tpo" -c -o normalize-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c; \
	then mv -f "$(DEPDIR)/normalize-getopt1.Tpo" "$(DEPDIR)/normalize-getopt1.Po"; else rm -f "$(DEPDIR)/normalize-getopt1.Tpo"; exit 1; fi
#	source='getopt1.c' object='normalize-getopt1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c

normalize-getopt1.obj: getopt1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-getopt1.obj -MD -MP -MF "$(DEPDIR)/normalize-getopt1.Tpo" -c -o normalize-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-getopt1.Tpo" "$(DEPDIR)/normalize-getopt1.Po"; else rm -f "$(DEPDIR)/normalize-getopt1.Tpo"; exit 1; fi
#	source='getopt1.c' object='normalize-getopt1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`

normalize-wiener_af.o: wiener_af.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-wiener_af.o -MD -MP -MF "$(DEPDIR)/normalize-wiener_af.Tpo" -c -o normalize-wiener_af.o `test -f 'wiener_af.c' || echo '$(srcdir)/'`wiener_af.c; \
	then mv -f "$(DEPDIR)/normalize-wiener_af.Tpo" "$(DEPDIR)/normalize-wiener_af.Po"; else rm -f "$(DEPDIR)/normalize-wiener_af.Tpo"; exit 1; fi
#	source='wiener_af.c' object='normalize-wiener_af.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-wiener_af.o `test -f 'wiener_af.c' || echo '$(srcdir)/'`wiener_af.c

normalize-wiener_af.obj: wiener_af.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-wiener_af.obj -MD -MP -MF "$(DEPDIR)/normalize-wiener_af.Tpo" -c -o normalize-wiener_af.obj `if test -f 'wiener_af.c'; then $(CYGPATH_W) 'wiener_af.c'; else $(CYGPATH_W) '$(srcdir)/wiener_af.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-wiener_af.Tpo" "$(DEPDIR)/normalize-wiener_af.Po"; else rm -f "$(DEPDIR)/normalize-wiener_af.Tpo"; exit 1; fi
#	source='wiener_af.c' object='normalize-wiener_af.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-wiener_af.obj `if test -f 'wiener_af.c'; then $(CYGPATH_W) 'wiener_af.c'; else $(CYGPATH_W) '$(srcdir)/wiener_af.c'; fi`

normalize-riff.o: riff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-riff.o -MD -MP -MF "$(DEPDIR)/normalize-riff.Tpo" -c -o normalize-riff.o `test -f 'riff.c' || echo '$(srcdir)/'`riff.c; \
	then mv -f "$(DEPDIR)/normalize-riff.Tpo" "$(DEPDIR)/normalize-riff.Po"; else rm -f "$(DEPDIR)/normalize-riff.Tpo"; exit 1; fi
#	source='riff.c' object='normalize-riff.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-riff.o `test -f 'riff.c' || echo '$(srcdir)/'`riff.c

normalize-riff.obj: riff.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-riff.obj -MD -MP -MF "$(DEPDIR)/normalize-riff.Tpo" -c -o normalize-riff.obj `if test -f 'riff.c'; then $(CYGPATH_W) 'riff.c'; else $(CYGPATH_W) '$(srcdir)/riff.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-riff.Tpo" "$(DEPDIR)/normalize-riff.Po"; else rm -f "$(DEPDIR)/normalize-riff.Tpo"; exit 1; fi
#	source='riff.c' object='normalize-riff.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-riff.obj `if test -f 'riff.c'; then $(CYGPATH_W) 'riff.c'; else $(CYGPATH_W) '$(srcdir)/riff.c'; fi`

normalize-mpegvolume.o: mpegvolume.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-mpegvolume.o -MD -MP -MF "$(DEPDIR)/normalize-mpegvolume.Tpo" -c -o normalize-mpegvolume.o `test -f 'mpegvolume.c' || echo '$(srcdir)/'`mpegvolume.c; \
	then mv -f "$(DEPDIR)/normalize-mpegvolume.Tpo" "$(DEPDIR)/normalize-mpegvolume.Po"; else rm -f "$(DEPDIR)/normalize-mpegvolume.Tpo"; exit 1; fi
#	source='mpegvolume.c' object='normalize-mpegvolume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-mpegvolume.o `test -f 'mpegvolume.c' || echo '$(srcdir)/'`mpegvolume.c

normalize-mpegvolume.obj: mpegvolume.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -MT normalize-mpegvolume.obj -MD -MP -MF "$(DEPDIR)/normalize-mpegvolume.Tpo" -c -o normalize-mpegvolume.obj `if test -f 'mpegvolume.c'; then $(CYGPATH_W) 'mpegvolume.c'; else $(CYGPATH_W) '$(srcdir)/mpegvolume.c'; fi`; \
	then mv -f "$(DEPDIR)/normalize-mpegvolume.Tpo" "$(DEPDIR)/normalize-mpegvolume.Po"; else rm -f "$(DEPDIR)/normalize-mpegvolume.Tpo"; exit 1; fi
#	source='mpegvolume.c' object='normalize-mpegvolume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(normalize_CFLAGS) $(CFLAGS) -c -o normalize-mpegvolume.obj `if test -f 'mpegvolume.c'; then $(CYGPATH_W) 'mpegvolume.c'; else $(CYGPATH_W) '$(srcdir)/mpegvolume.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-exec install-exec-am install-exec-hook \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-info-am


install-exec-hook:
	(cd $(DESTDIR)$(bindir); \
	$(LN_S) `echo normalize-mp3 | sed s,x,x,` \
	        `echo normalize-ogg | sed s,x,x,`; \
	mv -f `echo normalize | sed s,x,x,` \
	      `echo normalize | sed s,x,x,`; \
	exit 0)

# test program targets follow

mktestwav: mktestwav.o riff.o version.o getopt.o getopt1.o
	$(LINK) $^ -lm

mktestwav.o: mktestwav.c riff.h

riffwalk: riffwalk.o

riffwalk.o: riff.c
	$(COMPILE) -DBUILD_RIFFWALK -c -o $@ $^

wavread: wavread.o

wavread.o: riff.c
	$(COMPILE) -DBUILD_WAVREAD -c -o $@ $^

test-wiener-af: test-wiener-af.o wav.o riff.o version.o
	$(LINK) $^ -lm

test-wiener-af.o: testaf.c
	$(COMPILE) -DFORCE_NOAUDIOFILE -c -o $@ $^

test-real-af: test-real-af.o
	$(LINK) $^ -L/usr/local/lib -lm -laudiofile

test-real-af.o: testaf.c
	$(COMPILE) -DFORCE_AUDIOFILE -c -o $@ $^
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
